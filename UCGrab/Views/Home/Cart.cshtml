@model IEnumerable<IGrouping<string, UCGrab.Database.Order>>
@{
    ViewBag.Title = "Cart";
    Layout = "~/Views/Shared/UserLayout.cshtml";
}

<style>
    .product-img {
        width: 50px;
        height: 50px;
        object-fit: cover;
        margin-right: 10px;
    }

    .table thead th {
        background-color: #343a40;
        color: #fff;
    }

    .btn-primary, .btn-primary:hover {
        background-color: #ffd700;
        border-color: #ffd700;
        color: #000;
    }

    .btn-danger, .btn-danger:hover {
        background-color: #ff0000;
        border-color: #ff0000;
        color: #fff;
    }

    .cart-summary {
        background-color: #f8f9fa;
        padding: 30px;
        border-radius: 5px;
    }
    .voucher-list {
    padding: 20px;
    background-color: #f9f9f9;
    border: 1px solid #ddd;
    border-radius: 8px;
    max-width: 600px;
    margin: 20px auto;
    font-family: 'Arial', sans-serif;
}

.voucher-list {
    padding: 20px;
    background-color: #f9f9f9;
    border: 1px solid #ddd;
    border-radius: 8px;
    max-width: 600px;
    margin: 20px auto;
    font-family: 'Arial', sans-serif;
}

.voucher-list h6 {
    font-size: 18px;
    color: #333;
    margin-bottom: 10px;
}

.voucher-card {
    background-color: #fff;
    border: 1px solid #ccc;
    border-radius: 8px;
    padding: 10px 15px;
    margin-bottom: 10px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    transition: transform 0.2s ease;
}

.voucher-card:hover {
    transform: translateY(-5px);
}

.voucher-content {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.voucher-code {
    font-size: 16px;
    font-weight: bold;
    color: #007bff;
    margin: 0;
}

.voucher-discount {
    font-size: 16px;
    font-weight: bold;
    color: #28a745;
    margin: 0;
}

.voucher-details {
    font-size: 14px;
    color: #555;
    margin-top: 5px;
}

.no-voucher {
    font-size: 14px;
    color: #888;
    text-align: center;
    margin-top: 10px;
}

</style>

@if (Model.Any())
{
    foreach (var storeGroup in Model)
    {
        <div class="container-fluid mb-5">
            <div class="row px-xl-5">
                <div class="col-lg-8 table-responsive mb-5">
                    <h4>@storeGroup.Key</h4>
                    <table class="table table-light table-borderless table-hover text-center mb-0">
                        <thead class="thead-dark">
                            <tr>
                                <th>Products</th>
                                <th>Price</th>
                                <th>Discounted Price</th>
                                <th>Quantity</th>
                                <th>Remove</th>
                            </tr>
                        </thead>
                        <tbody class="align-middle">
                            @foreach (var order in storeGroup)
                            {
                                foreach (var orDetail in order.Order_Detail)
                                {
                                    decimal originalPrice = (decimal)(orDetail.price ?? 0);
                                    decimal discountedPrice = originalPrice;
                                    decimal discountValue = 0;

                                    if (orDetail.Product.Discounts != null && orDetail.Product.Discounts.Any())
                                    {
                                        var discount = orDetail.Product.Discounts.FirstOrDefault(d =>
                                            d.is_active == 1 &&
                                            d.start_date <= DateTime.Now &&
                                            d.end_date >= DateTime.Now);

                                        if (discount != null)
                                        {
                                            discountValue = discount.discount_value ?? 0;
                                            discountedPrice = originalPrice - (originalPrice * discountValue / 100);
                                        }
                                    }

                                    decimal totalOriginal = originalPrice * (orDetail.quatity ?? 0);
                                    decimal totalDiscounted = discountedPrice * (orDetail.quatity ?? 0);
                                    <tr>
                                        <td class="align-middle">
                                            <div class="d-flex align-items-center">
                                                <img src="~/UploadedFiles/@(orDetail.Product.Image_Product.FirstOrDefault()?.image_file ?? "default_image.jpg")" alt="@orDetail.Product.product_name" class="product-img">
                                                @orDetail.Product.product_name
                                            </div>
                                        </td>
                                        <td class="align-middle">Php @orDetail.Product.price</td>
                                        <td class="align-middle">Php @originalPrice</td>
                                        <td class="align-middle">@orDetail.quatity</td>
                                        <td class="align-middle">
                                            <form method="post" action="@Url.Action("Cart", "Home")" class="delete-cart-item-form">
                                                
                                                <input type="hidden" name="orderDtId" value="@orDetail.id" />
                                                <input type="hidden" name="qty" value="0" />
                                                <input type="hidden" name="action" value="X" />
                                                <button type="button" class="btn btn-sm btn-danger delete-cart-item-btn">
                                                    <i class="fa fa-times"></i>
                                                </button>
                                            </form>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
                <div class="col-lg-4">
                    <div class="cart-summary">
                        <h5 class="section-title position-relative text-uppercase mb-3"><span class="bg-secondary pr-3">Cart Summary for @storeGroup.Key</span></h5>
                        <div class="voucher-list">
                            <h6>Available Vouchers </h6>
                            @{
                                var subtotal = storeGroup.Sum(order => order.Order_Detail.Sum(od => od.quatity * od.price));
                                var availableVouchers = ViewBag.AvailableVouchers as List<UCGrab.Database.Vouchers>;
                                var filteredVouchers = availableVouchers?.Where(v =>
                                    v.store_id == storeGroup.FirstOrDefault()?.Store.id &&
                                    v.is_active == 1 &&
                                    v.start_date <= DateTime.Now &&
                                    v.end_date >= DateTime.Now).ToList();

                                if (filteredVouchers != null && filteredVouchers.Any())
                                {
                                    foreach (var voucher in filteredVouchers)
                                    {
                                        <div class="voucher-card">
                                            <div class="voucher-content">
                                                <p class="voucher-code">Code: <strong>@voucher.voucher_code</strong></p>
                                                <p class="voucher-discount">
                                                    @if (voucher.discount_type == "Percentage")
                                                    {
                                                    <p>@voucher.discount_value%</p>
                                                    }
                                                    else
                                                    {
                                                     <p> Php @voucher.discount_value</p>
                                                    }
                                            </div>
                                            <p class="voucher-details">Minimum Spend: Php @voucher.min_order_amount</p>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <p class="no-voucher">No vouchers available.</p>
                                }
                            }

                        </div>

                        <form class="mb-30" action="@Url.Action("ApplyCoupon", "Home")" method="post">
                            @if (TempData["Error"] != null)
                            {
                                <div class="alert alert-danger">@TempData["Error"]</div>
                            }
                            @if (TempData["Success"] != null)
                            {
                                <div class="alert alert-success">@TempData["Success"]</div>
                            }
                            <div class="input-group">
                                <input type="text" name="couponCode" class="form-control border-0 p-4" placeholder="Coupon Code">
                                <div class="input-group-append">
                                    <button class="btn btn-primary" type="submit">Apply Coupon</button>
                                </div>
                            </div>
                        </form> 
                        <div class="border-bottom pb-2">
                            <div class="d-flex justify-content-between mb-3">
                                <h6>Subtotal</h6>
                                <h6>
                                    Php @storeGroup.Sum(order => order.Order_Detail.Sum(od => od.Product.price * od.quatity))
                                </h6>
                            </div>
                            <div class="d-flex justify-content-between mb-3">
                                <h6>Discount</h6>
                                <h6>
                                    -Php @storeGroup.Sum(order => order.Order_Detail.Sum(od =>
                                    (od.Product.price > od.price)
                                        ? (decimal)((od.Product.price - od.price) * (od.quatity ?? 1))
                                        : 0
                                )).ToString("N2")
                                </h6>
                            </div>
                        </div>
                        <div class="pt-2">
                            <div class="d-flex justify-content-between mt-2">
                                <h5>Total Amount</h5>
                                <h5>Php
                                    @(
                                    storeGroup.Sum(order => order.Order_Detail.Sum(od =>
                                        (decimal)((od.Product.price * (od.quatity ?? 1)) -
                                        ((od.Product.price > od.price)
                                            ? (od.Product.price - od.price) * (od.quatity ?? 1)
                                            : 0))
                                    ))
                                    )
                                </h5>
                            </div>
                            <a href="/Home/Checkout" class="btn btn-block btn-primary font-weight-bold my-3 py-3">Checkout</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
}
else
{
    <div class="container-fluid">
        <div class="row px-xl-5">
            <div class="col-lg-12">
                <h3 class="text-center">Your cart is empty.</h3>
            </div>
        </div>
    </div>
}

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Add click event listener to delete buttons
        document.querySelectorAll('.delete-cart-item-btn').forEach(function (button) {
            button.addEventListener('click', function () {
                const form = this.closest('form'); // Find the corresponding form

                Swal.fire({
                    title: 'Are you sure?',
                    text: "This product will be removed from your cart.",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        form.submit(); // Submit the form after confirmation
                    }
                });
            });
        });
    });

</script>
@if (TempData["Success"] != null)
{
    <script>
                                                        Swal.fire({
                                                            title: 'Deleted!',
                                                            text: '@TempData["Success"]',
                                                            icon: 'success',
                                                            confirmButtonColor: '#3085d6'
                                                        });
    </script>
}
