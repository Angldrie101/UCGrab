@using UCGrab.Utils
@model List<UCGrab.Models.ProductViewModel>

@{
    ViewBag.Title = "ProductInfo";
    Layout = "~/Views/Shared/ShopPageLayout.cshtml";
}

<style>
    #preview img {
        border-radius: 5px;
        margin-bottom: 15px;
        width: 350px;
        height: 300px;
    }
</style>

<div class="container-fluid">
    <h2 class="section-title position-relative text-uppercase mx-xl-5 mb-4">
        <span class="bg-secondary pr-3">Product Management</span>
    </h2>
    <div class="row px-xl-5">
        <!-- Left Column: Form -->
        <div class="col-lg-6 mb-5">
            <div class="bg-light p-30 mb-30">
                <h5 class="card-title"><i class="fas fa-box mr-2"></i>Add Product</h5>
                @using (Html.BeginForm("ProductInfo", "Shop", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    if (!String.IsNullOrEmpty(TempData["Message"] as String))
                    {
                        <div class="alert alert-success" role="alert">@TempData["Message"]</div>
                    }
                    <div class="form-group">
                        <label class="form-label">Product Image</label>
                        <div id="preview" class="img-fluid"></div>
                        <div class="form-group">
                            <input id="files" name="files" type="file" accept="image/*">
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="productName" class="form-label">Product Name</label>
                        <input type="text" class="form-control" id="productName" name="product_name" placeholder="Enter product name" required>
                    </div>
                    <div class="form-group">
                        <label for="productCategory" class="form-label">Category</label>
                        @Html.DropDownList("Category", (IEnumerable<SelectListItem>)ViewBag.Categories, new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        <label for="productPrice" class="form-label">Price</label>
                        <input type="text" class="form-control" id="productPrice" name="price" placeholder="Enter product price" required>
                    </div>
                    <div class="form-group">
                        <label for="productDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="productDescription" name="product_description" rows="3" placeholder="Enter product description" required></textarea>
                    </div>
                    <div class="form-group">
                        <label for="productSize" class="form-label">Product Size</label>
                        <input type="text" class="form-control" id="productSize" name="size" placeholder="Enter product size" required>
                    </div>
                    <div class="form-group">
                        <label for="productStock" class="form-label">Initial Stock Quantity</label>
                        <input type="number" class="form-control" id="productStock" name="stock_quantity" placeholder="Enter initial stock quantity" required>
                    </div>
                    <button type="submit" class="btn btn-primary">Add Product</button>
                }
            </div>
        </div>

        <!-- Right Column: Product List -->
        <div class="col-lg-6 mb-5">
            <div class="bg-light p-30">
                <h5 class="card-title">Existing Products</h5>
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Category</th>
                            <th>Price</th>
                            <th>Stock</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (ViewBag.Products != null && ViewBag.Products.Count > 0)
                        {
                            foreach (var productViewModel in ViewBag.Products)
                            {
                                <tr>
                                    <td>@productViewModel.Product.id</td>
                                    <td>@productViewModel.Product.product_name</td>
                                    <td>@productViewModel.Product.Category.category_name</td>
                                    <td>@productViewModel.Product.price</td>
                                    <td>@productViewModel.TotalStock</td>
                                    <td>
                                        <button class="btn btn-sm btn-warning">Edit</button>
                                        <button class="btn btn-sm btn-danger" onclick="onDelete(@productViewModel.Product.id)">Delete</button>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="6">No products available.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js"></script>
<script src="/Assets/Shop/lib/easing/easing.min.js"></script>
<script src="/Assets/Shop/lib/owlcarousel/owl.carousel.min.js"></script>
<script src="/Assets/Shop/mail/jqBootstrapValidation.min.js"></script>
<script src="/Assets/Shop/mail/contact.js"></script>
<script src="/Assets/Shop/js/main.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<!-- SweetAlert2 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script type="text/javascript">
    const preview = (file) => {
        const fr = new FileReader();
        fr.onload = () => {
            const img = document.createElement("img");
            img.src = fr.result;
            img.alt = file.name;
            const previewDiv = document.querySelector('#preview');
            previewDiv.innerHTML = '';
            previewDiv.append(img);
        };
        fr.readAsDataURL(file);
    };

    document.querySelector("#files").addEventListener("change", (ev) => {
        if (!ev.target.files) return;
        preview(ev.target.files[0]);
    });

    function AddStock(id, name) {
        var htmlBody = "<input type='number' class='form-control' id='qty' value='' required />";
        $('#modalTitle').html("Add Stock (" + name + ")");
        $('#modalBody').html(htmlBody);
        $('#modalBtnOk').html("Save");
        $('#modalBtnCancel').html("Cancel");
        $('#modalBtnCancel').click(function () {
            $('#myModal').modal('hide');
        });
        $('#modalBtnOk').click(function () {
            var qty = $('#qty').val();
            if (qty == "") {
                $('#qty').css("border", "1px solid red");
                return;
            }
            $('#qty').css("border", "1px solid #ced4da");
            Swal.fire({
                title: "Are you sure?",
                icon: "question",
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                showCancelButton: true,
                confirmButtonText: "Save",
            }).then((result) => {
                if (result.isConfirmed) {
                    $.post("/Shop/ProductStockAdd",
                      {
                          id: id,
                          qty: qty
                      },
                      function (data, status) {
                          if (data.code == 0) {
                              Swal.fire(data.message, "", "success").then((result) => {
                                  if (result.isConfirmed) {
                                      window.location = "/Shop/ProductInfo";
                                  }
                              });
                              $('#myModal').modal('hide');
                          } else {
                              Swal.fire(data.message, "", "danger");
                          }
                      });
                }
            });
        });
        $('#myModal').modal('show');
    }

    function onDelete(id) {
        Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "question",
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            showCancelButton: true,
            confirmButtonText: "OK",
        }).then((result) => {
            if (result.isConfirmed) {
                $.post("/Shop/ProductDelete",
                  {
                      id: id
                  },
                  function (data, status) {
                      if (data.code == 0) {
                          Swal.fire(data.message, "", "success").then((result) => {
                              if (result.isConfirmed) {
                                  window.location = "/Shop/ProductInfo";
                              }
                          });
                      } else {
                          Swal.fire(data.message, "", "danger");
                      }
                  });
            }
        });
    }

    function catDelete(id) {
        Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "question",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "OK",
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    type: "POST",
                    url: "/Shop/CategoryDelete",
                    data: { id: id },
                    success: function (data) {
                        if (data.code === 0) {
                            Swal.fire(data.message, "", "success").then(() => {
                                window.location.reload();
                            });
                        } else {
                            Swal.fire(data.message, "", "error");
                        }
                    },
                    error: function (xhr, status, error) {
                        Swal.fire("An error occurred: " + xhr.statusText, "", "error");
                    }
                });
            }
        });
    }
</script>
