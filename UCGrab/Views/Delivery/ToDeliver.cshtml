@model IEnumerable<UCGrab.Models.OrderViewModel>

@{
    ViewBag.Title = "To Deliver";
    Layout = "~/Views/Shared/_DeliveryLayoutPage.cshtml";
}

<div>
    <div class="row px-xl-5">
        <div class="col-lg-12 mb-4">
            <ul class="nav nav-tabs">
                <li class="nav-item">
                    <a class="nav-link active" data-toggle="tab" href="#toDeliver">To Deliver</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" data-toggle="tab" href="#received">Received</a>
                </li>
            </ul>
        </div>
    </div>

    <div class="row px-xl-5">
        <div class="col-lg-12 mb-5">
            <div class="bg-light p-30 tab-content">
                <div id="toDeliver" class="tab-pane fade show active">
                    @RenderOrders(Model.Where(o => o.Status == "ReadyToDeliver"), "Order Delivered", true)
                </div>

                <div id="received" class="tab-pane fade">
                    @RenderOrders(Model.Where(o => o.Status == "Delivered"), "Order Completed")
                </div>
            </div>
        </div>
    </div>

</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    function confirmOrder(orderId) {
        Swal.fire({
            title: 'Are you sure?',
            text: "Make sure the order is delivered to the customer before clicking the button",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delivered!'
        }).then((result) => {
            if (result.isConfirmed) {
                var form = document.createElement("form");
                form.setAttribute("method", "post");
                form.setAttribute("action", "/Delivery/Delivered");

                var hiddenField = document.createElement("input");
                hiddenField.setAttribute("type", "hidden");
                hiddenField.setAttribute("name", "orderId");
                hiddenField.setAttribute("value", orderId);

                form.appendChild(hiddenField);
                document.body.appendChild(form);
                form.submit();
            }
        });
    }
</script>

@helper RenderOrders(IEnumerable<UCGrab.Models.OrderViewModel> orders, string buttonText, bool showConfirmButton = false)
{
if (!orders.Any())
{
        <div class="text-center mt-5">
            <img src="~/Content/Images/no-orders.png" alt="No Orders" class="mb-3" style="max-width: 100px; display: block; margin: 0 auto;">
            <h4>No orders found</h4>
        </div>
}
else
{
    foreach (var order in orders)
    {
            <div class="order-item mb-4">
                <div class="d-flex justify-content-between align-items-center bg-lightgray text-dark p-3" style="background-color: lightgray;">
                    <div><strong>Store: </strong>@order.Stores</div>
                    <div><strong>Order Date: </strong>@order.OrderDate.ToString("yyyy-MM-dd")</div>
                </div>
                <div class="p-3" style="background-color: white;">
                    <div><strong>Customer Name: </strong>@order.Firstname @order.Lastname</div>
                    <div><strong>Phone: </strong>@order.Phone</div>
                    <div><strong>Deliver To: </strong>@order.Building at room @order.Room</div>
                    <div><strong>Customer Request: </strong>@order.AdditionalInfo</div> <br />

                    @foreach (var product in order.Products)
                    {
                        <div class="h6 text-decoration-none text-truncate"><strong>PRODUCT:</strong></div>
                        <div class="d-flex align-items-center border-bottom pb-3 mb-3">
                            <img src="~/UploadedFiles/@product.ImageFilePath" alt="@product.ProductName" style="width: 100px; height: 100px; object-fit: cover;">
                            <div class="ml-3">
                                <a href="#" class="h6 text-decoration-none text-truncate">@product.ProductName</a>
                                <div class="text-muted">Quantity: @product.Quantity</div>
                                <div class="text-muted">Price: Php @product.Price.ToString("N2")</div>
                            </div>
                        </div>
                    }
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <strong>Total Amount: Php @order.Total</strong>
                    </div>
                </div>
                @if (showConfirmButton)
                {
                    <div class="p-3 text-center" style="background-color: #E8E742 ; width: 100%;">
                        <button class="btn btn-link" onclick="confirmOrder(@order.OrderId)" style="color: #000;">@buttonText</button>
                    </div>
                }
            </div>
    }
}
}
